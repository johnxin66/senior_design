import os
import airsim
import pickle
import pprint

# sys.path.append(os.path.dirname(os.path.abspath(__file__)) +
#                 "/../path_planning/")

from path_planning.Dijkstra import Dijkstra
from path_planning.plotting import Plotting
from path_planning.multiple_stop_sequence_planner import tsp

def endSession(reset=True):
    if reset:
        client.reset()
        client.armDisarm(False)

    # that's enough fun for now. let's quit cleanly
    client.enableApiControl(False)

# _WAY_POINTS = [[0, 0, -30], [15, 15, -30], [20, 15, -30], [20, 20, -30], [25, 25, -30], [40, -30, -30], [45, 40, -30], [50, 50, -30], [50, 50, -5]]
# _TEST_DIJKSTRA_WAYPOINT_LISTS = [(900, 925), (901, 924), (902, 923), (903, 922), (904, 921), (905, 920), (906, 919), (907, 918), (908, 917), (909, 916), (910, 915), (911, 914), (912, 913), (913, 912), (914, 911), (915, 910), (916, 909), (917, 908), (918, 907), (919, 906), (920, 905), (921, 904), (922, 903), (923, 902), (924, 901), (925, 900), (926, 899), (927, 898), (928, 897), (929, 896), (930, 895), (931, 894), (932, 893), (933, 892), (934, 891), (935, 890), (936, 889), (937, 888), (938, 887), (939, 886), (940, 885), (941, 884), (942, 883), (943, 882), (944, 881), (945, 880), (946, 879), (947, 878), (948, 877), (949, 876), (950, 875), (951, 874), (952, 873), (953, 872), (954, 871), (955, 870), (956, 869), (957, 868), (958, 867), (959, 866), (960, 865), (961, 864), (962, 863), (963, 862), (964, 861), (965, 860), (966, 859), (967, 858), (967, 857), (967, 856), (967, 855), (967, 854), (967, 853), (967, 852), (967, 851), (967, 850), (967, 849), (967, 848), (967, 847), (967, 846), (967, 845), (967, 844), (967, 843), (967, 842), (967, 841), (967, 840), (967, 839), (967, 838), (967, 837), (967, 836), (967, 835), (967, 834), (967, 833), (967, 832), (967, 831), (967, 830), (967, 829), (967, 828), (967, 827), (967, 826), (967, 825), (967, 824), (967, 823), (967, 822), (967, 821), (967, 820), (967, 819), (967, 818), (967, 817), (967, 816), (967, 815), (967, 814), (967, 813), (967, 812), (967, 811), (967, 810), (967, 809), (967, 808), (967, 807), (967, 806), (967, 805), (967, 804), (967, 803), (967, 802), (967, 801), (967, 800), (967, 799), (967, 798), (967, 797), (967, 796), (967, 795), (967, 794), (967, 793), (967, 792), (967, 791), (967, 790), (967, 789), (967, 788), (967, 787), (967, 786), (967, 785), (967, 784), (967, 783), (967, 782), (967, 781), (967, 780), (967, 779), (967, 778), (967, 777), (967, 776), (967, 775), (967, 774), (967, 773), (967, 772), (967, 771), (967, 770), (967, 769), (967, 768), (967, 767), (967, 766), (967, 765), (967, 764), (967, 763), (967, 762), (967, 761), (967, 760), (967, 759), (967, 758), (967, 757), (967, 756), (967, 755), (967, 754), (967, 753), (967, 752), (967, 751), (967, 750), (967, 749), (967, 748), (967, 747), (967, 746), (967, 745), (967, 744), (967, 743), (967, 742), (967, 741), (967, 740), (967, 739), (967, 738), (967, 737), (967, 736), (967, 735), (967, 734), (967, 733), (967, 732), (967, 731), (967, 730), (967, 729), (967, 728), (967, 727), (967, 726), (967, 725), (967, 724), (967, 723), (967, 722), (967, 721), (967, 720), (967, 719), (967, 718), (967, 717), (967, 716), (967, 715), (967, 714), (967, 713), (967, 712), (967, 711), (967, 710), (967, 709), (967, 708), (967, 707), (967, 706), (967, 705), (967, 704), (967, 703), (966, 702), (965, 701), (964, 700), (963, 699), (962, 698), (961, 697), (960, 696), (959, 695), (958, 694), (957, 693), (956, 692), (955, 691), (954, 690), (953, 689), (952, 688), (951, 687), (950, 686), (949, 685), (948, 684), (947, 683), (946, 682), (945, 681), (944, 680), (943, 679), (942, 678), (941, 677), (940, 676), (939, 675), (938, 674), (938, 673), (938, 672), (938, 671), (938, 670), (938, 669), (938, 668), (938, 667), (938, 666), (938, 665), (938, 664), (938, 663), (938, 662), (938, 661), (938, 660), (938, 659), (938, 658), (938, 657), (938, 656), (938, 655), (938, 654), (938, 653), (938, 652), (938, 651), (938, 650), (938, 649), (938, 648), (938, 647), (938, 646), (938, 645), (938, 644), (938, 643), (938, 642), (938, 641), (938, 640), (938, 639), (938, 638), (938, 637), (938, 636), (938, 635), (938, 634), (938, 633), (938, 632), (938, 631), (938, 630), (938, 629), (938, 628), (938, 627), (938, 626), (938, 625), (938, 624), (938, 623), (938, 622), (938, 621), (938, 620), (938, 619), (938, 618), (938, 617), (938, 616), (938, 615), (938, 614), (938, 613), (938, 612), (938, 611), (938, 610), (938, 609), (938, 608), (938, 607), (938, 606), (938, 605), (938, 604), (938, 603), (938, 602), (938, 601), (938, 600), (938, 599), (937, 598), (936, 597), (935, 596), (934, 595), (934, 594), (934, 593), (934, 592), (934, 591), (933, 590), (932, 589), (931, 588), (930, 587), (929, 586), (928, 585), (927, 584), (926, 583), (925, 582), (924, 581), (923, 580), (922, 579), (921, 578), (920, 577), (919, 576), (918, 575), (917, 574), (916, 573), (915, 572), (914, 571), (913, 570), (912, 569), (911, 568), (910, 567), (909, 566), (908, 565), (907, 564), (906, 563), (905, 562), (904, 561), (903, 560), (902, 559), (901, 558), (900, 557), (899, 556), (898, 555), (897, 554), (896, 553), (895, 552), (894, 551), (893, 550), (892, 549), (891, 548), (890, 547), (889, 546), (888, 545), (887, 544), (886, 543), (885, 542), (884, 541), (883, 540), (882, 539), (881, 538), (880, 537), (879, 536), (878, 535), (877, 534), (876, 533), (875, 532), (874, 531), (873, 530), (872, 529), (871, 528), (870, 527), (869, 526), (868, 525), (867, 524), (866, 523), (865, 522), (864, 521), (863, 520), (862, 519), (861, 518), (860, 517), (859, 516), (858, 515), (857, 514), (856, 513), (855, 512), (854, 511), (853, 511), (852, 511), (851, 511), (850, 511), (849, 511), (848, 511), (847, 511), (846, 511), (845, 511), (844, 511), (843, 511), (842, 511), (841, 511), (840, 511), (839, 511), (838, 511), (837, 511), (836, 511), (835, 511), (834, 511), (833, 511), (832, 511), (831, 511), (830, 511), (829, 511), (828, 511), (827, 511), (826, 511), (825, 511), (824, 511), (823, 511), (822, 511), (821, 511), (820, 511), (819, 511), (818, 511), (817, 511), (816, 511), (815, 511), (814, 511), (813, 511), (812, 511), (811, 511), (810, 511), (809, 511), (808, 511), (807, 511), (806, 511), (805, 511), (804, 511), (803, 511), (802, 511), (801, 511), (800, 511), (799, 511), (798, 511), (797, 511), (796, 511), (795, 511), (794, 511), (793, 511), (792, 511), (791, 511), (790, 511), (789, 511), (788, 511), (787, 511), (786, 511), (785, 511), (784, 511), (783, 511), (782, 511), (781, 511), (780, 511), (779, 511), (778, 511), (777, 511), (776, 511), (775, 511), (774, 511), (773, 511), (772, 511), (771, 511), (770, 511), (769, 511), (768, 511), (767, 511), (766, 511), (765, 511), (764, 511), (763, 511), (762, 511), (761, 511), (760, 511), (759, 511), (758, 511), (757, 511), (756, 511), (755, 511), (754, 511), (753, 511), (752, 511), (751, 510), (750, 510), (749, 510), (748, 510), (747, 510), (746, 510), (745, 510), (744, 510), (743, 510), (742, 510), (741, 510), (740, 510), (739, 510), (738, 510), (737, 510), (736, 510), (735, 510), (734, 510), (733, 510), (732, 510), (731, 510), (730, 510), (729, 510), (728, 510), (727, 510), (726, 510), (725, 510), (724, 510), (723, 510), (722, 510), (721, 510), (720, 510), (719, 510), (718, 510), (717, 510), (716, 510), (715, 510), (714, 510), (713, 510), (712, 510), (711, 510), (710, 510), (709, 510), (708, 510), (707, 510), (706, 510), (705, 510), (704, 510), (703, 510), (702, 510), (701, 510), (700, 510), (699, 510), (698, 510), (697, 510), (696, 510), (695, 510), (694, 510), (693, 510), (692, 510), (691, 510), (690, 510), (689, 510), (688, 510), (687, 510), (686, 510), (685, 510), (684, 510), (683, 510), (682, 510), (681, 510), (680, 510), (679, 510), (678, 510), (677, 510), (676, 510), (675, 510), (674, 510), (673, 510), (672, 510), (671, 510), (670, 510), (669, 510), (668, 510), (667, 510), (666, 510), (665, 510), (664, 510), (663, 510), (662, 510), (661, 510), (660, 510), (659, 510), (658, 510), (657, 510), (656, 510), (655, 510), (654, 510), (653, 510), (652, 510), (651, 510), (650, 510), (649, 510), (648, 510), (647, 510), (646, 510), (645, 510), (644, 510), (643, 510), (642, 510), (641, 510), (640, 510), (639, 510), (638, 510), (637, 510), (636, 510), (635, 510), (634, 510), (633, 510), (632, 510), (631, 510), (630, 510), (629, 510), (628, 510), (627, 510), (626, 510), (625, 510), (624, 509), (623, 508), (622, 507), (621, 506), (620, 505), (619, 505), (618, 505), (617, 505), (616, 505), (615, 505), (614, 505), (613, 505), (612, 505), (611, 505), (610, 505), (609, 505), (608, 505), (607, 505), (606, 505), (605, 505), (604, 505), (603, 505), (602, 505), (601, 505), (600, 505), (599, 504), (598, 503), (597, 502), (596, 501), (595, 500), (594, 500), (593, 500), (592, 500), (591, 500), (590, 500), (589, 500), (588, 500), (587, 500), (586, 500), (585, 500), (584, 500), (583, 500), (582, 500), (581, 500), (580, 500), (579, 500), (578, 500), (577, 500), (576, 500), (575, 500), (574, 500), (573, 500), (572, 500), (571, 500), (570, 500), (569, 500), (568, 500), (567, 500), (566, 500), (565, 500), (564, 500), (563, 500), (562, 500), (561, 500), (560, 500), (559, 500), (558, 500), (557, 500), (556, 500), (555, 500), (554, 500), (553, 500), (552, 500), (551, 500), (550, 500), (549, 500), (548, 500), (547, 500), (546, 500), (545, 500), (544, 500), (543, 500), (542, 500), (541, 500), (540, 500), (539, 500), (538, 500), (537, 500), (536, 500), (535, 500), (534, 500), (533, 500), (532, 500), (531, 500), (530, 500), (529, 500), (528, 500), (527, 500), (526, 500), (525, 500), (524, 500), (523, 500), (522, 500), (521, 500), (520, 500), (519, 500), (518, 500), (517, 500), (516, 500), (515, 500), (514, 500), (513, 500), (512, 500), (511, 500), (510, 500), (509, 500), (508, 500), (507, 500), (506, 500), (505, 500), (504, 500), (503, 500), (502, 500), (501, 500), (500, 500)]
_TEST_DIJKSTRA_WAYPOINT_LISTS = [[(800, 650), (801, 649), (802, 649), (803, 649), (804, 649), (805, 649), (806, 649), (807, 649), (808, 649), (809, 649), (810, 649), (811, 649), (812, 649), (813, 649), (814, 649), (815, 649), (816, 649), (817, 649), (818, 649), (819, 649), (820, 649), (821, 649), (822, 649), (823, 649), (824, 649), (825, 649), (826, 649), (827, 649), (828, 649), (829, 649), (830, 649), (831, 649), (832, 649), (833, 649), (834, 649), (835, 649), (836, 649), (837, 649), (838, 649), (839, 649), (840, 649), (841, 649), (842, 649), (843, 649), (844, 649), (845, 649), (846, 649), (847, 649), (848, 649), (849, 649), (850, 649), (851, 649), (852, 649), (853, 649), (854, 649), (855, 649), (856, 649), (857, 649), (858, 649), (859, 649), (860, 649), (861, 649), (862, 649), (863, 649), (864, 649), (865, 649), (866, 649), (867, 649), (867, 648), (867, 647), (867, 646), (867, 645), (867, 644), (867, 643), (867, 642), (867, 641), (867, 640), (867, 639), (867, 638), (867, 637), (867, 636), (867, 635), (867, 634), (867, 633), (867, 632), (867, 631), (867, 630), (867, 629), (867, 628), (867, 627), (867, 626), (867, 625), (867, 624), (867, 623), (867, 622), (867, 621), (867, 620), (867, 619), (867, 618), (867, 617), (867, 616), (867, 615), (867, 614), (867, 613), (867, 612), (867, 611), (867, 610), (867, 609), (867, 608), (867, 607), (867, 606), (867, 605), (867, 604), (867, 603), (867, 602), (867, 601), (867, 600), (867, 599), (866, 598), (865, 597), (864, 596), (863, 595), (862, 594), (861, 593), (860, 592), (859, 591), (858, 590), (857, 589), (856, 588), (855, 587), (854, 586), (853, 585), (852, 584), (851, 583), (850, 582), (849, 581), (848, 580), (847, 579), (846, 578), (845, 577), (844, 576), (843, 575), (842, 574), (842, 573), (842, 572), (842, 571), (842, 570), (842, 569), (842, 568), (842, 567), (841, 566), (840, 565), (839, 564), (838, 563), (837, 562), (836, 561), (835, 561), (834, 561), (833, 561), (832, 561), (831, 561), (830, 561), (829, 561), (828, 561), (827, 561), (826, 561), (825, 561), (824, 561), (823, 561), (822, 561), (821, 561), (820, 561), (819, 561), (818, 561), (817, 561), (816, 561), (815, 561), (814, 561), (813, 561), (812, 561), (811, 561), (810, 561), (809, 561), (808, 561), (807, 561), (806, 561), (805, 561), (804, 561), (803, 561), (802, 561), (801, 561), (800, 561), (799, 561), (798, 561), (797, 561), (796, 560), (795, 559), (795, 558), (795, 557), (795, 556), (795, 555), (795, 554), (795, 553), (795, 552), (795, 551), (795, 550), (795, 549), (795, 548), (795, 547), (795, 546), (795, 545), (795, 544), (795, 543), (795, 542), (795, 541), (795, 540), (795, 539), (795, 538), (795, 537), (795, 536), (795, 535), (795, 534), (795, 533), (795, 532), (795, 531), (795, 530), (795, 529), (795, 528), (795, 527), (795, 526), (795, 525), (795, 524), (795, 523), (795, 522), (795, 521), (795, 520), (795, 519), (795, 518), (795, 517), (795, 516), (795, 515), (795, 514), (795, 513), (795, 512), (795, 511), (794, 511), (793, 511), (792, 511), (791, 511), (790, 511), (789, 511), (788, 511), (787, 511), (786, 511), (785, 511), (784, 511), (783, 511), (782, 511), (781, 511), (780, 511), (779, 511), (778, 511), (777, 511), (776, 511), (775, 511), (774, 511), (773, 511), (772, 511), (771, 511), (770, 511), (769, 511), (768, 511), (767, 511), (766, 511), (765, 511), (764, 511), (763, 511), (762, 511), (761, 511), (760, 511), (759, 511), (758, 511), (757, 511), (756, 511), (755, 511), (754, 511), (753, 511), (752, 511), (751, 510), (750, 510), (749, 510), (748, 510), (747, 510), (746, 510), (745, 510), (744, 510), (743, 510), (742, 510), (741, 510), (740, 510), (739, 510), (738, 510), (737, 510), (736, 510), (735, 510), (734, 510), (733, 510), (732, 510), (731, 510), (730, 510), (729, 510), (728, 510), (727, 510), (726, 510), (725, 510), (724, 510), (723, 510), (722, 510), (721, 510), (720, 510), (719, 510), (718, 510), (717, 510), (716, 510), (715, 510), (714, 510), (713, 510), (712, 510), (711, 510), (710, 510), (709, 510), (708, 510), (707, 510), (706, 510), (705, 510), (704, 510), (703, 510), (702, 510), (701, 510), (700, 510), (699, 510), (698, 510), (697, 510), (696, 510), (695, 510), (694, 510), (693, 510), (692, 510), (691, 510), (690, 510), (689, 510), (688, 510), (687, 510), (686, 510), (685, 510), (684, 510), (683, 510), (682, 510), (681, 510), (680, 510), (679, 510), (678, 510), (677, 510), (676, 510), (675, 510), (674, 510), (673, 510), (672, 510), (671, 510), (670, 510), (669, 510), (668, 510), (667, 510), (666, 510), (665, 510), (664, 510), (663, 510), (662, 510), (661, 510), (660, 510), (659, 510), (658, 510), (657, 510), (656, 510), (655, 510), (654, 510), (653, 510), (652, 510), (651, 510), (650, 510), (649, 510), (648, 510), (647, 510), (646, 510), (645, 510), (644, 510), (643, 510), (642, 510), (641, 510), (640, 510), (639, 510), (638, 510), (637, 510), (636, 510), (635, 510), (634, 510), (633, 510), (632, 510), (631, 510), (630, 510), (629, 510), (628, 510), (627, 510), (626, 510), (625, 510), (624, 509), (623, 508), (622, 507), (621, 506), (620, 505), (619, 505), (618, 505), (617, 505), (616, 505), (615, 505), (614, 505), (613, 505), (612, 505), (611, 505), (610, 505), (609, 505), (608, 505), (607, 505), (606, 505), (605, 505), (604, 505), (603, 505), (602, 505), (601, 505), (600, 505), (599, 504), (598, 503), (597, 502), (596, 501), (595, 500), (594, 500), (593, 500), (592, 500), (591, 500), (590, 500), (589, 500), (588, 500), (587, 500), (586, 500), (585, 500), (584, 500), (583, 500), (582, 500), (581, 500), (580, 500), (579, 500), (578, 500), (577, 500), (576, 500), (575, 500), (574, 500), (573, 500), (572, 500), (571, 500), (570, 500), (569, 500), (568, 500), (567, 500), (566, 500), (565, 500), (564, 500), (563, 500), (562, 500), (561, 500), (560, 500), (559, 500), (558, 500), (557, 500), (556, 500), (555, 500), (554, 500), (553, 500), (552, 500), (551, 500), (550, 500), (549, 500), (548, 500), (547, 500), (546, 500), (545, 500), (544, 500), (543, 500), (542, 500), (541, 500), (540, 500), (539, 500), (538, 500), (537, 500), (536, 500), (535, 500), (534, 500), (533, 500), (532, 500), (531, 500), (530, 500), (529, 500), (528, 500), (527, 500), (526, 500), (525, 500), (524, 500), (523, 500), (522, 500), (521, 500), (520, 500), (519, 500), (518, 500), (517, 500), (516, 500), (515, 500), (514, 500), (513, 500), (512, 500), (511, 500), (510, 500), (509, 500), (508, 500), (507, 500), (506, 500), (505, 500), (504, 500), (503, 500), (502, 500), (501, 500), (500, 500)], [(900, 750), (901, 749), (902, 748), (903, 747), (904, 746), (905, 745), (906, 744), (907, 743), (908, 742), (909, 741), (910, 740), (911, 739), (912, 738), (913, 737), (914, 736), (915, 735), (916, 734), (917, 733), (918, 732), (919, 731), (920, 730), (921, 729), (922, 728), (923, 727), (924, 726), (925, 725), (926, 724), (927, 723), (928, 722), (929, 721), (930, 721), (931, 721), (932, 721), (933, 721), (934, 720), (935, 719), (936, 718), (937, 717), (938, 716), (939, 715), (940, 714), (941, 713), (942, 712), (943, 711), (944, 710), (945, 709), (946, 708), (947, 707), (948, 706), (949, 705), (950, 705), (951, 705), (952, 705), (953, 705), (954, 705), (955, 705), (956, 705), (957, 705), (958, 705), (959, 705), (960, 705), (961, 705), (962, 705), (963, 705), (964, 705), (965, 705), (966, 705), (967, 705), (967, 704), (967, 703), (966, 702), (965, 701), (964, 700), (963, 699), (962, 698), (961, 697), (960, 696), (959, 695), (958, 694), (957, 693), (956, 692), (955, 691), (954, 690), (953, 689), (952, 688), (951, 687), (950, 686), (949, 685), (948, 684), (947, 683), (946, 682), (945, 681), (944, 680), (943, 679), (942, 678), (941, 677), (940, 676), (939, 675), (938, 674), (937, 673), (936, 672), (935, 671), (934, 670), (933, 669), (932, 669), (931, 669), (930, 669), (929, 669), (928, 669), (927, 669), (926, 669), (925, 669), (924, 669), (923, 669), (922, 669), (921, 669), (920, 669), (919, 668), (918, 667), (917, 666), (916, 665), (915, 665), (914, 665), (913, 665), (912, 665), (911, 665), (910, 665), (909, 665), (908, 665), (907, 665), (906, 665), (905, 665), (904, 665), (903, 665), (902, 665), (901, 665), (900, 665), (899, 665), (898, 665), (897, 665), (896, 665), (895, 665), (894, 665), (893, 665), (892, 665), (891, 665), (890, 665), (889, 665), (888, 665), (887, 665), (886, 665), (885, 665), (884, 665), (883, 665), (882, 665), (881, 665), (880, 664), (879, 663), (878, 662), (877, 661), (876, 660), (875, 659), (874, 658), (873, 657), (872, 656), (871, 655), (870, 654), (869, 653), (868, 652), (867, 651), (866, 650), (865, 650), (864, 650), (863, 650), (862, 650), (861, 650), (860, 650), (859, 650), (858, 650), (857, 650), (856, 650), (855, 650), (854, 650), (853, 650), (852, 650), (851, 650), (850, 650), (849, 650), (848, 650), (847, 650), (846, 650), (845, 650), (844, 650), (843, 650), (842, 650), (841, 650), (840, 650), (839, 650), (838, 650), (837, 650), (836, 650), (835, 650), (834, 650), (833, 650), (832, 650), (831, 650), (830, 650), (829, 650), (828, 650), (827, 650), (826, 650), (825, 650), (824, 650), (823, 650), (822, 650), (821, 650), (820, 650), (819, 650), (818, 650), (817, 650), (816, 650), (815, 650), (814, 650), (813, 650), (812, 650), (811, 650), (810, 650), (809, 650), (808, 650), (807, 650), (806, 650), (805, 650), (804, 650), (803, 650), (802, 650), (801, 650), (800, 650)], [(500, 500), (501, 501), (502, 502), (503, 503), (504, 504), (505, 505), (506, 506), (507, 507), (508, 508), (509, 509), (510, 510), (511, 511), (512, 511), (513, 511), (514, 511), (515, 511), (516, 511), (517, 511), (518, 511), (519, 511), (520, 511), (521, 511), (522, 511), (523, 511), (524, 511), (525, 511), (526, 511), (527, 511), (528, 511), (529, 511), (530, 511), (531, 511), (532, 511), (533, 511), (534, 511), (535, 511), (536, 511), (537, 511), (538, 511), (539, 511), (540, 511), (541, 511), (542, 511), (543, 511), (544, 511), (545, 511), (546, 511), (547, 511), (548, 511), (549, 511), (550, 511), (551, 511), (552, 511), (553, 511), (554, 511), (555, 511), (556, 511), (557, 511), (558, 511), (559, 511), (560, 511), (561, 511), (562, 511), (563, 511), (564, 511), (565, 511), (566, 511), (567, 511), (568, 511), (569, 511), (570, 511), (571, 511), (572, 511), (573, 511), (574, 511), (575, 511), (576, 511), (577, 511), (578, 511), (579, 511), (580, 511), (581, 511), (582, 511), (583, 511), (584, 511), (585, 511), (586, 511), (587, 511), (588, 511), (589, 511), (590, 511), (591, 511), (592, 511), (593, 511), (594, 511), (595, 511), (596, 511), (597, 511), (598, 511), (599, 511), (600, 511), (601, 511), (602, 511), (603, 511), (604, 511), (605, 511), (606, 511), (607, 511), (608, 511), (609, 511), (610, 511), (611, 511), (612, 511), (613, 511), (614, 511), (615, 511), (616, 511), (617, 511), (618, 511), (619, 511), (620, 511), (621, 511), (622, 511), (623, 511), (624, 511), (625, 511), (626, 511), (627, 511), (628, 511), (629, 511), (630, 511), (631, 511), (632, 511), (633, 511), (634, 511), (635, 511), (636, 511), (637, 511), (638, 511), (639, 511), (640, 511), (641, 511), (642, 511), (643, 511), (644, 511), (645, 511), (646, 511), (647, 511), (648, 511), (649, 511), (650, 511), (651, 511), (652, 511), (653, 511), (654, 511), (655, 511), (656, 511), (657, 511), (658, 511), (659, 511), (660, 511), (661, 511), (662, 511), (663, 511), (664, 511), (665, 511), (666, 511), (667, 511), (668, 511), (669, 511), (670, 511), (671, 511), (672, 511), (673, 511), (674, 511), (675, 511), (676, 511), (677, 511), (678, 511), (679, 511), (680, 511), (681, 511), (682, 511), (683, 511), (684, 511), (685, 511), (686, 511), (687, 511), (688, 511), (689, 511), (690, 511), (691, 511), (692, 511), (693, 511), (694, 511), (695, 511), (696, 511), (697, 511), (698, 511), (699, 511), (700, 511), (701, 511), (702, 511), (703, 511), (704, 511), (705, 511), (706, 511), (707, 511), (708, 511), (709, 511), (710, 511), (711, 511), (712, 511), (713, 511), (714, 511), (715, 511), (716, 511), (717, 511), (718, 511), (719, 511), (720, 511), (721, 511), (722, 511), (723, 511), (724, 511), (725, 511), (726, 511), (727, 511), (728, 511), (729, 511), (730, 511), (731, 511), (732, 511), (733, 511), (734, 511), (735, 511), (736, 511), (737, 511), (738, 511), (739, 511), (740, 511), (741, 511), (742, 511), (743, 511), (744, 511), (745, 511), (746, 511), (747, 511), (748, 511), (749, 511), (750, 511), (751, 511), (752, 511), (753, 511), (754, 511), (755, 511), (756, 511), (757, 511), (758, 511), (759, 511), (760, 511), (761, 511), (762, 511), (763, 511), (764, 511), (765, 511), (766, 511), (767, 511), (768, 511), (769, 511), (770, 511), (771, 511), (772, 511), (773, 511), (774, 511), (775, 511), (776, 511), (777, 511), (778, 511), (779, 511), (780, 511), (781, 511), (782, 511), (783, 511), (784, 511), (785, 511), (786, 511), (787, 511), (788, 511), (789, 511), (790, 511), (791, 511), (792, 511), (793, 511), (794, 511), (795, 511), (796, 512), (797, 513), (798, 514), (799, 515), (800, 516), (801, 517), (802, 518), (803, 519), (804, 519), (805, 519), (806, 519), (807, 519), (808, 519), (809, 519), (810, 519), (811, 519), (812, 519), (813, 519), (814, 519), (815, 519), (816, 519), (817, 519), (818, 519), (819, 519), (820, 519), (821, 519), (822, 519), (823, 519), (824, 519), (825, 519), (826, 519), (827, 519), (828, 519), (829, 519), (830, 519), (831, 519), (832, 519), (833, 519), (834, 519), (835, 519), (836, 519), (837, 519), (838, 519), (839, 519), (840, 519), (841, 519), (842, 519), (843, 520), (844, 521), (845, 522), (846, 523), (847, 524), (848, 525), (849, 526), (850, 527), (851, 528), (852, 529), (853, 530), (854, 531), (855, 532), (856, 533), (857, 534), (858, 535), (859, 536), (860, 537), (861, 538), (862, 539), (863, 540), (864, 541), (865, 542), (866, 543), (867, 544), (868, 545), (869, 546), (870, 547), (871, 548), (872, 549), (873, 550), (874, 551), (875, 552), (876, 553), (877, 554), (878, 555), (879, 556), (880, 557), (881, 558), (882, 559), (883, 560), (884, 561), (885, 562), (886, 563), (887, 564), (888, 565), (889, 566), (890, 567), (891, 568), (892, 569), (893, 570), (894, 571), (895, 572), (896, 573), (897, 574), (898, 575), (899, 576), (900, 577), (901, 578), (902, 579), (903, 580), (904, 581), (905, 582), (906, 583), (907, 584), (908, 585), (909, 586), (910, 587), (911, 588), (912, 589), (913, 590), (914, 591), (915, 591), (916, 591), (917, 591), (918, 591), (919, 591), (920, 591), (921, 591), (922, 591), (923, 591), (924, 591), (925, 591), (926, 591), (927, 591), (928, 591), (929, 591), (930, 591), (931, 591), (932, 591), (933, 591), (934, 591), (935, 592), (936, 593), (937, 594), (938, 595), (939, 596), (939, 597), (939, 598), (939, 599), (939, 600), (939, 601), (939, 602), (939, 603), (939, 604), (939, 605), (939, 606), (939, 607), (939, 608), (939, 609), (939, 610), (939, 611), (939, 612), (939, 613), (939, 614), (939, 615), (939, 616), (939, 617), (939, 618), (939, 619), (939, 620), (939, 621), (939, 622), (939, 623), (939, 624), (939, 625), (939, 626), (939, 627), (939, 628), (939, 629), (939, 630), (939, 631), (939, 632), (939, 633), (939, 634), (939, 635), (939, 636), (939, 637), (939, 638), (939, 639), (939, 640), (939, 641), (939, 642), (939, 643), (939, 644), (939, 645), (939, 646), (939, 647), (939, 648), (939, 649), (939, 650), (939, 651), (939, 652), (939, 653), (939, 654), (939, 655), (939, 656), (939, 657), (939, 658), (939, 659), (939, 660), (939, 661), (939, 662), (939, 663), (939, 664), (939, 665), (939, 666), (939, 667), (939, 668), (939, 669), (939, 670), (939, 671), (939, 672), (939, 673), (939, 674), (939, 675), (940, 676), (941, 677), (942, 678), (943, 679), (944, 680), (945, 681), (946, 682), (947, 683), (948, 684), (949, 685), (950, 686), (951, 687), (952, 688), (953, 689), (954, 690), (955, 691), (956, 692), (957, 693), (958, 694), (959, 695), (960, 696), (961, 697), (962, 698), (963, 699), (964, 700), (965, 701), (966, 702), (967, 703), (967, 704), (967, 705), (966, 706), (965, 707), (964, 708), (963, 709), (962, 710), (961, 711), (960, 712), (959, 713), (958, 714), (957, 715), (956, 716), (955, 717), (954, 718), (953, 719), (952, 720), (951, 721), (950, 722), (949, 723), (948, 724), (947, 725), (946, 726), (945, 727), (944, 728), (943, 729), (942, 730), (941, 731), (940, 732), (939, 733), (938, 734), (937, 735), (936, 736), (935, 737), (934, 738), (933, 739), (932, 740), (931, 741), (930, 742), (929, 743), (928, 744), (927, 745), (926, 746), (925, 747), (924, 747), (923, 747), (922, 747), (921, 747), (920, 747), (919, 747), (918, 747), (917, 747), (916, 747), (915, 748), (914, 748), (913, 748), (912, 748), (911, 748), (910, 748), (909, 748), (908, 748), (907, 749), (906, 750), (905, 750), (904, 750), (903, 750), (902, 750), (901, 750), (900, 750)]]
_CORRECTION = 5
_PATHS_FILE_NAME = "teste_flight_paths.pickle"

def export_map(client):
    print("exporting map")
    center = airsim.Vector3r(0, 0, 0)
    output_path = os.path.join(os.getcwd(), "source\\path_planning\\test_map_1000_1000_300.binvox")
    client.simCreateVoxelGrid(center, 1000, 1000, 200, 1, output_path)
    print("map exported")
# connect to the AirSim simulator
client = airsim.MultirotorClient()
client.confirmConnection()
client.reset()
# export_map(client)

s_start = (500, 500)
s_goals = [(500, 530)]#, (530, 500), (500, 470), (470, 500)]#, (400, 425)]

# Generate stop sequence, which is circular by nature
s_goals.insert(0, s_start)
_, stop_sequence = tsp(s_goals)

# rotate the stop sequence to start from s_start
stop_sequence = stop_sequence[:-1]
i_start = stop_sequence.index(0)
stop_sequence = stop_sequence[i_start:] + stop_sequence[:i_start] + [0]
print("stop_sequence", stop_sequence)

# generate and save the path among all_destinations, to be looked up later
def generate_and_save_path_among(destinations: list):
    l_destinations = len(destinations)
    paths = {}
    for i in range(l_destinations - 1):
        for j in range(i + 1, l_destinations):
            dijkstra = Dijkstra(destinations[i], destinations[j])
            curr_waypoints, _ = dijkstra.searching()
            paths[destinations[i] + destinations[j]] = curr_waypoints
    pickle.dump(paths, open(_PATHS_FILE_NAME,'w'))

# generate path among the sequence of stops
_TEST_DIJKSTRA_WAYPOINT_LISTS = []
for i_stop in range(len(stop_sequence) - 1):
    dijkstra = Dijkstra(s_goals[stop_sequence[i_stop]], s_goals[stop_sequence[i_stop + 1]])
    curr_waypoints, visited = dijkstra.searching()
    _TEST_DIJKSTRA_WAYPOINT_LISTS.append(curr_waypoints)
    plot = Plotting(s_goals[stop_sequence[i_stop]], s_goals[stop_sequence[i_stop + 1]])
    plot.animation(curr_waypoints, visited, "Dijkstra's")  # animation generate
print("_TEST_DIJKSTRA_WAYPOINT_LISTS")
print(_TEST_DIJKSTRA_WAYPOINT_LISTS)

client.enableApiControl(True)

state = client.getMultirotorState()
s = pprint.pformat(state)
print("state: %s" % s)
# initial_location_xyz = state.position.x_val, state.position.y_val, state.position.z_val

imu_data = client.getImuData()
s = pprint.pformat(imu_data)
print("imu_data: %s" % s)

barometer_data = client.getBarometerData()
s = pprint.pformat(barometer_data)
print("barometer_data: %s" % s)

magnetometer_data = client.getMagnetometerData()
s = pprint.pformat(magnetometer_data)
print("magnetometer_data: %s" % s)

gps_data = client.getGpsData()
s = pprint.pformat(gps_data)
print("gps_data: %s" % s)

airsim.wait_key('Press any key to takeoff')
print("Taking off...")
client.armDisarm(True)
client.takeoffAsync().join()

state = client.getMultirotorState()
print("state: %s" % pprint.pformat(state))

# airsim.wait_key('Press any key to move vehicle to the destination at 5 m/s')
print("Flying...")
current_xy = 0, 0, -50
for waypoints in _TEST_DIJKSTRA_WAYPOINT_LISTS:
    i = 0
    for waypoint in reversed(waypoints):
        i += 1
        if i > 1 and i < len(waypoints) - 1:
            prev = waypoints[i - 2]
            curr = waypoints[i - 1]
            next = waypoints[i]
            if (curr[0] - prev[0] == next[0] - curr[0] and curr[1] - prev[1] == next[1] - curr[1]):
                continue
        new_waypoint = -(waypoint[0] - 500), -(waypoint[1] + _CORRECTION - 500), -100
        # current_position = current_xy[0], current_xy[1]
        yaw = 0 #math.degrees(math.atan2(current_xy[1] - new_waypoint[1], current_xy[0] - new_waypoint[0]))
        # print("new_waypoint:", new_waypoint)
        # print("current_xy:", current_xy)
        # print("vector to new waypoint:", current_xy[1] - new_waypoint[1])
        # print(f"yaw degree: {yaw}")
        yaw_mode = airsim.YawMode(is_rate=False, yaw_or_rate=yaw)
        move_future = client.moveToPositionAsync(new_waypoint[0], new_waypoint[1], new_waypoint[2], 10, drivetrain=airsim.DrivetrainType.ForwardOnly, yaw_mode=yaw_mode)
        while not move_future._set_flag:
            move_future._loop.start()
            distance_sensor_data = client.getDistanceSensorData()
            # dd = pprint.pformat(distance_sensor_data)
            # print("distance_sensor_data: %s" % dd)
            if (distance_sensor_data.distance < 20):
                client.cancelLastTask()
                client.hoverAsync().join()
                exit()

        move_future.join()
        # client.hoverAsync().join()
        # time.sleep(8)

        current_pose = client.simGetVehiclePose().position
        current_xy = current_pose.x_val, current_pose.y_val

    # Descend and hover for dropoff

    client.hoverAsync().join()
    client.moveToPositionAsync(-(waypoints[0][0] - 500), -(waypoints[0][1] + _CORRECTION - 500), -5, 10).join()
    state = client.getMultirotorState()
    print("state: %s" % pprint.pformat(state))

# airsim.wait_key('Press any key to take images')
# # get camera images from the car
# responses = client.simGetImages([
#     airsim.ImageRequest("0", airsim.ImageType.DepthVis),  #depth visualization image
#     airsim.ImageRequest("1", airsim.ImageType.DepthPerspective, True), #depth in perspective projection
#     airsim.ImageRequest("1", airsim.ImageType.Scene), #scene vision image in png format
#     airsim.ImageRequest("1", airsim.ImageType.Scene, False, False)])  #scene vision image in uncompressed RGBA array
# print('Retrieved images: %d' % len(responses))

# tmp_dir = os.path.join(tempfile.gettempdir(), "airsim_drone")
# print ("Saving images to %s" % tmp_dir)
# try:
#     os.makedirs(tmp_dir)
# except OSError:
#     if not os.path.isdir(tmp_dir):
#         raise

# for idx, response in enumerate(responses):

#     filename = os.path.join(tmp_dir, str(idx))

#     if response.pixels_as_float:
#         print("Type %d, size %d" % (response.image_type, len(response.image_data_float)))
#         airsim.write_pfm(os.path.normpath(filename + '.pfm'), airsim.get_pfm_array(response))
#     elif response.compress: #png format
#         print("Type %d, size %d" % (response.image_type, len(response.image_data_uint8)))
#         airsim.write_file(os.path.normpath(filename + '.png'), response.image_data_uint8)
#     else: #uncompressed array
#         print("Type %d, size %d" % (response.image_type, len(response.image_data_uint8)))
#         img1d = np.fromstring(response.image_data_uint8, dtype=np.uint8) # get numpy array
#         img_rgb = img1d.reshape(response.height, response.width, 3) # reshape array to 4 channel image array H X W X 3
#         cv2.imwrite(os.path.normpath(filename + '.png'), img_rgb) # write to png

airsim.wait_key('Press any key to reset to original state')
endSession()

